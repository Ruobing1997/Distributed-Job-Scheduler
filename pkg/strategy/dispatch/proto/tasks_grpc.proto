syntax = "proto3";

option go_package = "./task_grpc";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

service TaskService {
  rpc ExecuteTask(TaskRequest) returns (TaskResponse);
  rpc NotifyTaskStatus(NotifyMessageRequest) returns (NotifyMessageResponse);
}

service LeaseService {
  rpc RenewLease(RenewLeaseRequest) returns (RenewLeaseResponse);
}

message Payload {
  int32 format = 1;
  string script = 2;
}

message TaskRequest {
  string id = 1;
  string execId = 2;
  Payload payload = 3;
  google.protobuf.Timestamp execution_time = 4;
  int32 max_retry_count = 5;
}

message TaskResponse {
  string id = 1;
  int32 status = 2;
}

message NotifyMessageRequest {
  string workerId = 1;
  string taskId = 2;
  string execId = 3;
  int32 status = 4;
}

message NotifyMessageResponse {
  bool success = 1;
}

message RenewLeaseRequest {
  string id = 1;
  string execId = 2;
  google.protobuf.Duration lease_duration = 3;
}

message RenewLeaseResponse {
  bool success = 1;
}