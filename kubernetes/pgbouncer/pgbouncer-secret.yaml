apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: "2023-08-05T15:11:53Z"
  generation: 3
  labels:
    k8s-app: postgres
    qcloud-app: postgres
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:k8s-app: {}
            f:qcloud-app: {}
        f:spec:
          f:podManagementPolicy: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:k8s-app: {}
              f:qcloud-app: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:k8s-app: {}
                f:qcloud-app: {}
            f:spec:
              f:containers:
                k:{"name":"postgres"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"POSTGRES_DB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRES_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRES_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/data/postgres"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/docker-entrypoint-initdb.d"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"init-sql"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"robin-cfs"}:
                  .: {}
                  f:name: {}
                  f:nfs:
                    .: {}
                    f:path: {}
                    f:server: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:partition: {}
            f:type: {}
      manager: tke-platform-api
      operation: Update
      time: "2023-08-05T19:15:38Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:collisionCount: {}
          f:currentReplicas: {}
          f:currentRevision: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updateRevision: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-08-05T21:32:56Z"
  name: postgres
  namespace: supernova
  resourceVersion: "1161042238"
  selfLink: /apis/apps/v1/namespaces/supernova/statefulsets/postgres
  uid: 6cf9abd1-efbe-4e81-84d1-b6fd9fa8857a
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: postgres
      qcloud-app: postgres
  serviceName: ""
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: postgres
        qcloud-app: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: "970409"
            - name: POSTGRES_DB
              value: postgres
          image: postgres:latest
          imagePullPolicy: Always
          name: postgres
          resources:
            limits:
              cpu: "20"
              memory: 40Gi
            requests:
              cpu: "10"
              memory: 30Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /data/postgres
              name: robin-cfs
            - mountPath: /docker-entrypoint-initdb.d
              name: init-sql
            - mountPath: /docker-entrypoint-initdb.d
              name: init-sql
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: robin-cfs
          nfs:
            path: /7y4mvag2
            server: 9.134.176.116
        - configMap:
            defaultMode: 420
            name: postgres-init-script
          name: init-sql
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
status:
  collisionCount: 0
  currentReplicas: 1
  currentRevision: postgres-98f4d4c9c
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updateRevision: postgres-98f4d4c9c
  updatedReplicas: 1
