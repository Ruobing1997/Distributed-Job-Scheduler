syntax = "proto3";

option go_package = "./task_grpc";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

service TaskManagerService {
  rpc TaskStream(stream TaskStreamRequest) returns (stream TaskStreamResponse);
}

// Worker -> Manager 的消息
message TaskStreamRequest {
  oneof request {
    WorkerIdentity worker_identity = 1; // Worker 发送身份信息
    RenewLeaseRequest renew_lease = 2;  // Worker 发送续约请求
    TaskResponse task_response = 3;     // Worker 发送任务执行结果
  }
}

// Manager -> Worker 的消息
message TaskStreamResponse {
  oneof response {
    TaskRequest task_request = 1;          // Manager 派发的任务
    RenewLeaseResponse renew_lease_response = 2; // Manager 回应续约请求的结果
    string error_msg = 3;                  // 错误消息
  }
}

message Payload {
  int32 format = 1;
  string script = 2;
}

message TaskStopRequest {
  string id = 1;
}

message TaskRequest {
  string id = 1;
  Payload payload = 2;
  google.protobuf.Timestamp execution_time = 3;
  int32 max_retry_count = 4;
}

message TaskResponse {
  string workerID = 1;
  string taskID = 2;
  int32 status = 3;
}

message RenewLeaseRequest {
  string id = 1;
  google.protobuf.Duration lease_duration = 2;
}

message RenewLeaseResponse {
  bool success = 1;
}

message WorkerIdentity {
  string worker_id = 1;
}