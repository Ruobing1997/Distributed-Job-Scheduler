version: '3'

services:
  api-server:
    image: morefun-supernova-api:4.1
    command: ["/app/api"]
    depends_on:
      - manager
    ports:
      - "8080:8080"

  manager:
    image: morefun-supernova-manager:4.1
    command: ["/usr/wait-for-it.sh", "postgres:5432", "--", "/usr/wait-for-it.sh", "redis:6379", "--", "/usr/wait-for-it.sh", "worker:50051", "--", "/app/manager", "start"]
    depends_on:
      - redis
      - postgres
      - worker
    environment:
      REDIS_ADDR: "redis:6379"
      REDIS_PASSWORD: ""
      REDIS_DB: 0
      WORKER_SERVICE: "worker"
      MANAGER_SERVICE: "manager"
      POSTGRES: "postgres"
      POSTGRES_URL: "host=pgbouncer port=5432 user=postgres dbname=postgres sslmode=disable"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "9090:9090"


  worker:
    image: morefun-supernova-worker:4.1
    command: ["/app/executor", "start"]
    environment:
      MANAGER_SERVICE: "manager"
      POSTGRES: "postgres"
      POSTGRES_URL: "host=pgbouncer port=5432 user=postgres dbname=postgres sslmode=disable"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

  redis:
    image: redis:latest
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./pkg/data-structure/redis.conf:/usr/local/etc/redis/redis.conf

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "postgres"
    volumes:
      - ./pkg/database/postgreSQL/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data

  pgbouncer:
    image: edoburu/pgbouncer
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=970409
      - DB_HOST=postgres
      - DB_NAME=postgres
      - POOL_MODE=session
      - ADMIN_USERS=postgres
      - AUTH_TYPE=plain
      - MAX_CLIENT_CONN=5000
      - DEFAULT_POOL_SIZE=5000
      - RESERVE_POOL_SIZE=5000
    ports:
      - "5432:5432"
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:latest
    command:
      - "--config.file=/etc/prometheus/prometheus-config.yml"
    volumes:
      - ./prometheus-config.yml:/etc/prometheus/prometheus-config.yml
    ports:
      - "7070:9090"

  grafana:
    image: grafana/grafana:latest
    command:
      - "sh"
      - "-c"
      - "chown -R 472:472 /var/lib/grafana/"
    ports:
      - "3000:3000"
volumes:
    pgdata: